# Broadcom bcm63158 Target
# worked against this commit
#commit aad87180586a43500f8af1cf79255c7293bb258b (HEAD -> master, origin/master, origin/HEAD)
#Author: Doug Brunner <doug.a.brunner@gmail.com>
#Date:   Mon Oct 25 10:15:07 2021 -0700

#Open On-Chip Debugger 0.11.0-rc1+dev-00010-gc69b4deae-dirty (2021-01-06-17:31)



# board does not feature anything but JTAG
transport select jtag

bindto 0.0.0.0
adapter speed  25000
gdb_port 3333
telnet_port 4444

proc pwrsts { } {
        set pwrsts [drscan auto0.tap 16 0]
    echo "pwrsts ="$pwrsts

}



#debug_level 4

# SRST-only reset configuration
#reset_config trst_and_srst combined
#reset_config trst_and_srst
reset_config trst_and_srst






if { [info exists CHIPNAME] } {
  set _CHIPNAME $CHIPNAME
} else {
  set _CHIPNAME bcm63158
}

#
# Main DAP
#
if { [info exists DAP_TAPID] } {
   set _DAP_TAPID $DAP_TAPID
} else {
   set _DAP_TAPID 0x5ba00477
}

# declare the one JTAG tap to access the DAP
#;TDI -> pmips(5) -> pmips2(5) -> memc(5) -> pmc(5) -> ARM(4) -> LVTAP(31) -> TDO



jtag newtap unknown1  tap -irlen 31 -expected-id 0x4068a17f -enable
jtag newtap $_CHIPNAME tap -irlen 4 -expected-id 0x5ba00477 -enable
jtag newtap unknown2  tap -irlen 5  -expected-id 0x8631517f -enable
jtag newtap unknown3  tap -irlen 5  -expected-id 0x8631517f -enable
jtag newtap unknown4  tap -irlen 5  -expected-id 0xfffc78d3 -enable
jtag newtap unknown5  tap -irlen 5  -expected-id 0xffffffff -enable



# create the DAP
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.tap

# declare the 8 main application cores
set _TARGETNAME $_CHIPNAME.cpu
set _smp_command ""

set $_TARGETNAME.cti(0) 0x81820000

set _cores 1
for { set _core 0 } { $_core < $_cores } { incr _core 1 } {

    cti create cti$_core -dap $_CHIPNAME.dap -ctibase [set $_TARGETNAME.cti($_core)] -ap-num 0
    #cti create cti$_core -dap $_CHIPNAME.dap -ap-num 0

    set _command "target create ${_TARGETNAME}$_core aarch64 \
                         -dap $_CHIPNAME.dap -coreid $_core -cti cti$_core"

    if { $_core != 0 } {
        # non-boot core examination may fail
        set _command "$_command -defer-examine"
        set _smp_command "$_smp_command ${_TARGETNAME}$_core"
    } else {
        # uncomment when "hawt" rtos is merged
        # set _command "$_command -rtos hawt"
        set _smp_command "target smp ${_TARGETNAME}$_core"
    }

    eval $_command
}

eval $_smp_command

#-defer-examine
target create 63158.axi mem_ap -dap bcm63158.dap -ap-num 1 

# halt the cores when gdb attaches
${_TARGETNAME}0 configure -event gdb-attach "halt"

# make sure the default target is the boot core
targets ${_TARGETNAME}0

proc core_up { args } {
	global _TARGETNAME

	# examine remaining cores
	foreach _core [set args] {
		${_TARGETNAME}$_core arp_examine
	}
	halt
}

